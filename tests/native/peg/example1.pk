from peg import Grammar

def debug(node, indent)
  result = ""
  while node
    result += " " * indent +
      "{name: ${node.name}, text: '${node.text}'}\n"

    result += debug(node.head, indent + 2)
    node = node.next
  end
  return result
end

def collect(node, name)
  result = []
  while node
    if name == node.name
      result.append(node.text)
    end
    result += collect(node.head, name)
    node = node.next
  end
  return result
end

fn
  grammar = Grammar(r'
    start = (space* word)*;
    word = ([a-z]/[A-Z])+;
    space = (" " / "\r" / "\n" / "\t")+ ;
  ')
  if grammar.error then return end

  result = grammar.parse("A quick fox jump over the lazy dog", "start")
  if result.error then return end

  print(debug(result.root, 0))
  print(collect(result.root, "word"))
end ()
